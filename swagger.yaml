openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/kurnhyalcantara/alta-airbnb-api/1.0.0
info:
  title: Alta AirBNB API
  description: API endpoint for Alta AirBNB Kelompok 4
  version: 1.0.1
paths:
  /login:
    post:
      summary: User login
      description: Authenticate a user with email and password.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request
  /users:
    post:
      summary: Buat akun baru
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: User berhasil ditambahkan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: status
                  message:
                    type: string
                    example: 'Berhasil menambahkan user'
                  data:
                    type: object
                    properties:
                      userId:
                        type: number
                        example: 1
        '400':
          description: Invalid request
  /users/profile:
    get:
      summary: Mendapatkan data user profile
      description: Mendapatkan data user profile berdasarkan token
      tags:
        - Users
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/UserGetByIdResponse'
        '404':
          description: User not found
      security:
        - bearerAuth: []
    put:
      summary: Edit data profile user
      description: Edit data profile user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Berhasil memperbarui data user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
      security:
        - bearerAuth: []
    delete:
      summary: Delete User
      description: Delete an existing user
      tags:
        - Users
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
      security:
        - bearerAuth: []
  /stays:
    post:
      summary: Tambah rumah sewa
      description: Menambahkan rumah sewaan
      tags:
        - Stays
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StayRequest'
      responses:
        '201':
          description: Berhasil menambahkan rumah sewaan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddStayResponse'
      security:
        - bearerAuth: []
    get:
      summary: Semua data rumah sewa
      description: Dapatkan semua data rumah sewa
      tags:
        - Stays
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllStayResponse'
  /stays/{id}:
    get:
      summary: Dapatkan rumah sewa berdasarkan ID
      description: Mendapatkan rumah sewa berdasarkan ID
      tags:
        - Stays
      parameters:
        - name: id
          in: path
          description: Stay ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStayByIdResponse'
        '404':
          description: Stay not found
    put:
      summary: Edit rumah sewa
      description: Perbarui data rumah sewa
      tags:
        - Stays
      parameters:
        - name: id
          in: path
          description: Stay ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StayRequest'
      responses:
        '200':
          description: Stay updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: Stay not found
      security:
        - bearerAuth: []
    delete:
      summary: Hapus Rumah Sewa
      description: Delete an existing stay
      tags:
        - Stays
      parameters:
        - name: id
          in: path
          description: Stay ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Stay deleted successfully
        '404':
          description: Stay not found
      security:
        - bearerAuth: []
  /reservations/check:
    post:
      summary: Cek ketersediaan rumah sewa
      description: Cek ketersediaan rumah sewa dengan rentang tanggal tertentu.
      tags:
        - Reservations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
      responses:
        '200':
          description: Reservation status response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationStatusResponse'
        '400':
          description: Invalid request
      security:
        - bearerAuth: []
  /reservations:
    post:
      summary: Create a reservation
      description: Create a reservation for a room with the specified details.
      tags:
        - Reservations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReservationRequest'
      responses:
        '200':
          description: Successful reservation creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResponse'
        '400':
          description: Invalid request
      security:
        - bearerAuth: []
    get:
      summary: Get reservations
      description: Get a list of reservations.
      tags:
        - Reservations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationsResponse'
        '400':
          description: Invalid request
      security:
        - bearerAuth: []
components:
  schemas:
    UserResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          example: success
    User:
      type: object
      properties:
        id:
          type: string
          example: d6b4b0d4-2c89-4597-831e-5d641f9cc821
        fullname:
          type: string
          example: Kurniawan
        email:
          type: string
          format: email
          example: kurnhy@gmail.com
        password:
          type: string
          format: password
          example: supersecret
        phone:
          type: string
        birth:
          type: string
          format: date
        gender:
          type: string
    UserGetByIdResponse:
      type: object
      properties:
        id:
          type: string
          example: d6b4b0d4-2c89-4597-831e-5d641f9cc821
        fullname:
          type: string
          example: Kurniawan
        email:
          type: string
          format: email
          example: kurnhy@gmail.com
        phone:
          type: string
        birth:
          type: string
          format: date
        gender:
          type: string
    UserRequest:
      type: object
      properties:
        fullname:
          type: string
          example: Kurniawan
        email:
          type: string
          format: email
          example: kurnhy@gmail.com
        password:
          type: string
          format: password
          example: supersecret
        phone:
          type: string
        birth:
          type: string
          format: date
        gender:
          type: string
    AllUserResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Berhasil mendapatkan data user
        data:
          type: object
          properties:
            users:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  fullname:
                    type: string
                    example: Kurniawan
                  birth:
                    type: string
                    format: date
                  gender:
                    type: string
    StayRequest:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
          format: double
        description:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        bedrooms:
          type: integer
        bathrooms:
          type: integer
    AddStayResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
          properties:
            userId:
              type: string
    AllStayResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            stays:
              type: array
              items:
                $ref: '#/components/schemas/Stay'
    GetStayByIdResponse:
      type: object
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/Stay'
    Stay:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        description:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        bedrooms:
          type: integer
        bathrooms:
          type: integer
        ratings:
          type: number
          format: double
        images:
          type: array
          items:
            type: string
    ReservationRequest:
      type: object
      properties:
        room_id:
          type: integer
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
    ReservationStatusResponse:
      type: object
      properties:
        room_status:
          type: string
    CreateReservationRequest:
      type: object
      properties:
        room_id:
          type: integer
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        credit_card:
          $ref: '#/components/schemas/CreditCard'
    CreditCard:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        number:
          type: string
        cvv:
          type: integer
        month:
          type: integer
        year:
          type: integer
    ReservationResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            reservationId:
              type: string
    GetReservationsResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            reservations:
              type: array
              items:
                $ref: '#/components/schemas/Reservation'
    Reservation:
      type: object
      properties:
        user_id:
          type: integer
        reservation_id:
          type: integer
        room_name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        price:
          type: number
        total_price:
          type: number
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
  securitySchemes:
    bearerAuth: # Bearer token authentication
      type: apiKey
      name: Authorization
      in: header
      description: Enter your Bearer token in the format "Bearer {token}"
